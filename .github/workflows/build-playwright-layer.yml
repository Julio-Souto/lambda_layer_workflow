name: Build Playwright Layer (AL2023 / Python 3.12)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-layer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python (host, for helper steps)
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Create wheelhouse (manylinux_2_28)
        run: |
          mkdir -p wheelhouse
          docker run --rm -v "${{ github.workspace }}/wheelhouse":/wheels -v "${{ github.workspace }}/requirements.txt":/requirements.txt \
            quay.io/pypa/manylinux_2_28_x86_64:latest /bin/bash -lc "\
              /opt/python/cp312-cp312/bin/pip wheel --no-deps --wheel-dir=/wheels -r /requirements.txt && \
              chown -R $(id -u):$(id -g) /wheels"

      - name: Build layer in Lambda Python 3.12 image
        run: |
          set -e
          rm -rf out || true
          mkdir -p out/python/lib/python3.12/site-packages

          # Ejecutar un contenedor con la imagen oficial Lambda Python 3.12
          # --entrypoint /bin/bash permite ejecutar comandos arbitrarios dentro del container
          docker run --rm \
            --entrypoint /bin/bash \
            -v "${{ github.workspace }}/wheelhouse":/wheels \
            -v "${{ github.workspace }}/out":/out \
            -v "${{ github.workspace }}/requirements.txt":/requirements.txt \
            public.ecr.aws/lambda/python:3.12 -lc "\
              set -e; \
              # actualizar repos y herramientas (no todos los paquetes están en la imagen base, toleramos fallos)
              yum -y update || true; \
              yum -y install -y \
                python3-pip \
                python3-devel \
                tar xz unzip fontconfig freetype freetype-devel glibc-langpack-en \
                libX11 \
                libXcomposite \
                libXcursor \
                libXdamage \
                libXrandr \
                libXtst \
                libXrender \
                libxcb \
                libxshmfence \
                libxkbcommon \
                atk \
                gtk3 \
                pango \
                alsa-lib \
                cups-libs \
                dbus-glib || true; \
              python3 -m pip install --upgrade pip setuptools wheel; \
              python3 -m pip install --no-index --find-links=/wheels --no-deps \
                --target=/out/python/lib/python3.12/site-packages -r /requirements.txt; \
              export PLAYWRIGHT_BROWSERS_PATH=/out/.cache/ms-playwright; \
              export PYTHONPATH=/out/python/lib/python3.12/site-packages; \
              PYTHONPATH=$PYTHONPATH PLAYWRIGHT_BROWSERS_PATH=$PLAYWRIGHT_BROWSERS_PATH \
                python3 -m playwright install --with-deps chromium 2>&1 | tee /tmp/playwright-install.log; \
              echo '--- list /out ---'; ls -la /out || true; \
              chown -R 1000:1000 /out || true"

      - name: Show out size and sample files
        run: |
          echo "=== Size of out directory ==="
          du -sh out || true
          echo "=== top-level out files ==="
          ls -la out || true
          echo "=== site-packages sample ==="
          ls -la out/python/lib/python3.12/site-packages | head -n 80 || true

          echo "=== Playwright install log (if exists) ==="
          if [ -f out/.cache/ms-playwright/install.log ]; then
            echo "---- begin install.log ----"
            tail -n 400 out/.cache/ms-playwright/install.log || true
            echo "---- end install.log ----"
          else
            echo "No se encontró out/.cache/ms-playwright/install.log en el workspace."
            # Mostrar posibles archivos en la carpeta .cache para diagnosticar
            if [ -d out/.cache/ms-playwright ]; then
              echo "Contenido de out/.cache/ms-playwright:"
              ls -la out/.cache/ms-playwright || true
            fi
          fi

          # Mostrar también cualquier log temporal que pudiéramos haber creado en /out/tmp
          if [ -f out/tmp/playwright-install.log ]; then
            echo "---- tail out/tmp/playwright-install.log ----"
            tail -n 400 out/tmp/playwright-install.log || true
          fi

      - name: Zip layer
        run: |
          cd out
          zip -r ../playwright_layer_py312.zip .
          cd ..
          ls -lh playwright_layer_py312.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-layer-py312
          path: playwright_layer_py312.zip