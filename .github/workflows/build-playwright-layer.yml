name: Build Playwright Layer (AL2023 Python 3.12)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-layer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python host helper
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Create wheelhouse manylinux
        run: |
          mkdir -p wheelhouse
          docker run --rm -v "${{ github.workspace }}/wheelhouse":/wheels -v "${{ github.workspace }}/requirements.txt":/requirements.txt \
            quay.io/pypa/manylinux_2_28_x86_64:latest /bin/bash -lc "\
              /opt/python/cp312-cp312/bin/pip wheel --no-deps --wheel-dir=/wheels -r /requirements.txt || true; \
              chown -R $(id -u):$(id -g) /wheels || true"

      - name: Prepare out directory
        run: |
          rm -rf out || true
          mkdir -p out/python
          mkdir -p out/lib64
          chmod -R 755 out || true

      - name: Download Playwright browsers (Ubuntu)
        run: |
          echo "Downloading Playwright browsers inside Ubuntu (apt available)..."
          docker run --rm \
            -v "${{ github.workspace }}":/workspace \
            -v "${{ github.workspace }}/out":/out \
            -w /workspace \
            ubuntu:22.04 /bin/bash -lc "\
              set -euo pipefail; \
              apt-get update && apt-get install -y python3 python3-pip curl xz-utils unzip ca-certificates || true; \
              python3 -m pip install --upgrade pip setuptools wheel || true; \
              python3 -m pip install --no-cache-dir playwright || true; \
              export PLAYWRIGHT_BROWSERS_PATH=/out/.cache/ms-playwright; \
              python3 -m playwright install --with-deps chromium 2>&1 | tee /out/playwright-install-ubuntu.log || true; \
              echo 'Done downloading browsers in Ubuntu. Check /out/playwright-install-ubuntu.log' \
            "
            
      - name: Make build script executable / fix CRLF
        run: |
          # Asegúrate de que el script usa saltos de línea Unix (evita CRLF de Windows)
          if [ -f build_in_container.sh ]; then
            sed -i 's/\r$//' build_in_container.sh || true
            chmod +x build_in_container.sh || true
            echo "build_in_container.sh perms:"
            ls -l build_in_container.sh
          else
            echo "build_in_container.sh not found!"
            exit 1
          fi

      - name: Run build script inside python:3.12 lambda image
        run: |
          docker run --rm --entrypoint /bin/bash \
            -v "${{ github.workspace }}":/workspace \
            -v "${{ github.workspace }}/out":/out \
            -w /workspace \
            public.ecr.aws/lambda/python:3.12 \
            -c "/workspace/build_in_container.sh"

      - name: Show out contents (debug)
        run: |
          echo "=== /out tree (depth 4) ==="
          find out -maxdepth 4 -ls || true
          echo "=== build-info.txt ==="
          [ -f out/build-info.txt ] && sed -n '1,200p' out/build-info.txt || echo "no build-info"
          echo "=== ldd-headless.txt (tail) ==="
          [ -f out/ldd-headless.txt ] && tail -n 200 out/ldd-headless.txt || echo "no ldd output"
          echo "=== ldd-missing.txt ==="
          [ -f out/ldd-missing.txt ] && cat out/ldd-missing.txt || echo "no missing libs file"
          echo "=== playwright-install.log (tail) ==="
          [ -f out/playwright-install.log ] && tail -n 200 out/playwright-install.log || echo "no playwright-install.log"

      - name: Fix permissions
        run: |
          find out -type d -exec chmod 755 {} \; || true
          find out -type f -exec chmod 644 {} \; || true
          find out -name "headless_shell" -o -name "chrome" -exec chmod 755 {} \; || true
          find out/lib64 -name "*.so*" -exec chmod 755 {} \; 2>/dev/null || true

      - name: Zip layer
        run: |
          cd out
          zip -9 -r ../playwright_layer_py312.zip .
          cd ..
          ls -lh playwright_layer_py312.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-layer-py312
          path: playwright_layer_py312.zip