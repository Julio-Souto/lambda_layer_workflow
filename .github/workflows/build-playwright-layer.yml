name: Build Playwright Layer (AL2023 / Python 3.12)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-layer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python (host, for helper steps)
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Create wheelhouse (manylinux_2_28)
        run: |
          mkdir -p wheelhouse
          docker run --rm -v "${{ github.workspace }}/wheelhouse":/wheels -v "${{ github.workspace }}/requirements.txt":/requirements.txt \
            quay.io/pypa/manylinux_2_28_x86_64:latest /bin/bash -lc "\
              /opt/python/cp312-cp312/bin/pip wheel --no-deps --wheel-dir=/wheels -r /requirements.txt && \
              chown -R $(id -u):$(id -g) /wheels"

      - name: Prepare out dir
        run: |
          rm -rf out || true
          mkdir -p out/python/lib/python3.12/site-packages
          chmod -R a+rwX out || true

      - name: Build layer in Lambda Python 3.12 image (install packages + browsers)
        run: |
          set -e
          docker run --rm \
            --entrypoint /bin/bash \
            -v "${{ github.workspace }}/wheelhouse":/wheels \
            -v "${{ github.workspace }}/out":/out \
            -v "${{ github.workspace }}/requirements.txt":/requirements.txt \
            public.ecr.aws/lambda/python:3.12 -lc "\
              set -e; \
              yum -y update || true; \
              yum -y install -y python3-pip python3-devel tar xz unzip fontconfig freetype freetype-devel glibc-langpack-en \
                libX11 libXcomposite libXcursor libXdamage libXrandr libXtst libXrender libxcb libxshmfence libxkbcommon \
                atk gtk3 pango alsa-lib cups-libs dbus-glib \
                libnss3 nspr atk at-spi2-atk cups-libs libdrm dbus-glib libXScrnSaver cairo \
                || true; \
              python3 -m pip install --upgrade pip setuptools wheel || true; \
              # instalar Playwright PRIMERO en el sistema
              python3 -m pip install playwright || true; \
              # configurar variables de entorno para evitar la instalación automática de dependencias
              export PLAYWRIGHT_SKIP_BROWSERS_DOWNLOAD=0; \
              export PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true; \
              # instalar Chromium SIN --with-deps (ya instalamos las dependencias manualmente)
              export PLAYWRIGHT_BROWSERS_PATH=/tmp/ms-playwright; \
              python3 -m playwright install chromium 2>&1 | tee /tmp/playwright-install.log; \
              # ahora instalar dependencias en /out
              python3 -m pip install --no-index --find-links=/wheels --no-deps --target=/out/python/lib/python3.12/site-packages -r /requirements.txt || true; \
              python3 -m pip install playwright --target=/out/python/lib/python3.12/site-packages || true; \
              # copiar los navegadores instalados
              mkdir -p /out/.cache/ms-playwright; \
              cp -r /tmp/ms-playwright/* /out/.cache/ms-playwright/ 2>/dev/null || true; \
              chmod -R a+rwX /out || true; \
              chmod -R a+rX /out || true; \
              # forzar permisos ejecutables
              if find /out -type f -name headless_shell | grep -q headless_shell; then \
                find /out -type f -name headless_shell -exec chmod +x {} \\; || true; \
              fi; \
              if find /out -type f -name chrome | grep -q chrome; then \
                find /out -type f -name chrome -exec chmod +x {} \\; || true; \
              fi; \
              chown -R 1000:1000 /out || true"

      - name: Post-process out move browsers if installed inside site-packages
        run: |
          set -e
          if [ -d out/python/lib/python3.12/site-packages/playwright ]; then
            candidates=$(find out/python/lib/python3.12/site-packages/playwright -maxdepth 4 -type d -name "chrome-linux" -print || true)
            if [ -n "$candidates" ]; then
              mkdir -p out/.cache/ms-playwright
              for d in $candidates; do
                src=$(dirname "$(dirname "$d")")
                cp -a "$src"/* out/.cache/ms-playwright/ || true
              done
              chmod -R a+rX out/.cache/ms-playwright || true
            fi
          fi

      - name: Show out size and sample files
        run: |
          du -sh out || true
          ls -la out || true
          ls -la out/python/lib/python3.12/site-packages | head -n 160 || true
          if [ -f out/playwright-install.log ]; then
            tail -n 400 out/playwright-install.log || true
          fi

      - name: Zip layer
        run: |
          cd out
          zip -r ../playwright_layer_py312.zip .
          cd ..
          ls -lh playwright_layer_py312.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-layer-py312
          path: playwright_layer_py312.zip